using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using SimpleFrameWork.Timer;

namespace SimpleFrameWork
{

    /// <summary>
    /// 游戏总管理
    /// </summary>
    public class GameManager : MonoSingleton<GameManager>
    {

        private ResourceManager resourceManager;
        private UIManager uiManager;
        private AudioManager audioManager;
        private void Awake()
        {
         
            InitComponent();
            InitValue();
            InitManager();
        }

        private void InitValue()
        {
            gameObject.name = "GameManager";

        }

        /// <summary>
        /// 初始化字管理器
        /// </summary>
        private void InitManager()
        {
            InitUIManager();
            resourceManager = new ResourceManager();
            audioManager = new AudioManager();

        }

        private void InitUIManager()
        {
            if (GameObject.Find("Canvas") == null)
            {
                GameObject go = new GameObject();
                go.AddComponent<Canvas>();
                go.AddComponent<UIManager>();
                go.name = "Canvas";
            }
            else
            {
                uiManager = GameObject.Find("Canvas").GetComponent<UIManager>();
            }
        }
        private void InitComponent()
        {
            gameObject.AddComponent<AudioSource>();
            gameObject.AddComponent<AudioSource>();
            gameObject.AddComponent<TimerSystem>();
        }

        #region 资源管理
        public Sprite GetSpriteRes(string resName)
        {
            return resourceManager.GetSpriteRes(resName);
        }
        public Sprite[] GetSprites(string folderName)
        {
            return resourceManager.GetSprites(folderName);
        }
        public AudioClip GetAudioClipRes(string resName)
        {
            return resourceManager.GetAudioclipRes(resName);
        }
        public AudioClip[] GetAudioClips(string folderName)
        {
            return resourceManager.GetAudioclips(folderName);
        }

        public GameObject GetPrefabRes(string resName)
        {
            return resourceManager.GetPrefabRes(resName);
        }
        public GameObject[] GetPrefabs(string folderName)
        {
            return resourceManager.GetPrefabs(folderName);
        }

        public GameObject GetObj(string objName, int recycleTime = 3,int initCount = 0)
        {
            return resourceManager.GetObj(objName, recycleTime,initCount);
        }
        public void RecycleObj(string objName, GameObject obj, Action resetMethod = null)
        {
            resourceManager.RecycleObj(objName, obj, resetMethod);
        }
        #endregion

        #region 音频管理
        /// <summary>
        /// 播放音效
        /// </summary>
        /// <param name="soundName"></param>
        public void PlaySound(string soundName)
        {
            audioManager.PlaySound(soundName);
        }
        /// <summary>
        /// 随机播放一个文件夹中一个音效
        /// </summary>
        public void PlaySounds(string folderName)
        {
            audioManager.PlaySounds(folderName);
        }
        /// <summary>
        /// 播放音乐
        /// </summary>
        /// <param name="musicName"></param>
        /// <param name="loop"></param>
        public void PlayMusic(string musicName, bool loop = true)
        {
            audioManager.PlayMusic(musicName, loop);
        }
        /// <summary>
        /// 停止音乐
        /// </summary>
        public void StopMusic()
        {
            audioManager.StopMusic();
        }

        public void PlayAudioAtPoint(Vector3 pos, string audioPath, bool isFolderPath = false, bool is3DSound = true, float volume = 1)
        {
            audioManager.PlayAudioAtPoint(pos, audioPath, isFolderPath, is3DSound, volume);
        }
        #endregion

        #region 游戏管理

        #endregion

     
    }
}

